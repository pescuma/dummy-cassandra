{"name":"dummy-cassandra","body":"# dummy-cassandra\r\n\r\nA dummy interface for [Cassandra](http://cassandra.apache.org). It is aimed at a simple API and doesn't intend to be complete.\r\n\r\nBuilt upon the shoulders of [Hector](http://hector-client.github.com/hector).\r\n\r\n[![Build Status](https://secure.travis-ci.org/pescuma/dummy-cassandra.png?branch=master)](http://travis-ci.org/pescuma/dummy-cassandra)\r\n\r\n## Usage\r\n\r\n\r\n1. Create the cluster\r\n\r\n\t```java\r\n\tCassandraCluster cluster = new CassandraCluster(\"test-cluster\", \"localhost\");\r\n\t```\r\n\r\n1. Create the keyspaces\r\n\t\r\n\t```java\r\n\tCassandraKeyspace keyspace = cluster.addKeyspace(\"MyKeyspace\");\r\n\t```\r\n\t\r\n1. Create the column families and super-column families\r\n\t\r\n\t```java\r\n\tkeyspace.addColumnFamily(\"ColumnFamilyName\", CassandraType.UTF8, CassandraType.UTF8, CassandraType.UTF8);\r\n\t\r\n\tkeyspace.addSuperColumnFamily(\"SuperColumnFamilyName\", CassandraType.UTF8, CassandraType.UTF8, CassandraType.UTF8, CassandraType.Counter);\r\n\t```\r\n\r\n1. Connect to the cluster and create the column families if needed\r\n\r\n\t```java\r\n\tcluster.connect();\r\n\t```\r\n\t\r\n1. Insert data\r\n\r\n\t```java\r\n\tkeyspace.getColumnFamily(\"ColumnFamilyName\").getRow(\"row-id\").insertColumn(\"column-name\", \"column-value\");\r\n\t\r\n\tkeyspace.getSuperColumnFamily(\"SuperColumnFamilyName\").getRow(\"row-id\").getSuperColumn(\"super-column-id\").incrementCounter(\"column-name\", 1);\r\n\t```\r\n\r\n1. Read data\r\n\r\n\t```java\r\n\t(String) keyspace.getColumnFamily(\"ColumnFamilyName\").getRow(\"row-id\").getColumn(\"column-name\");\r\n\t\r\n\t(Long) keyspace.getSuperColumnFamily(\"SuperColumnFamilyName\").getRow(\"row-id\").getSuperColumn(\"super-column-id\").getColumn(\"column-name\");\r\n\t```\r\n\t\r\n1. List rows / columns\r\n\r\n\t```java\r\n\tkeyspace.getColumnFamily(\"ColumnFamilyName\").getRowKeys();\r\n\tkeyspace.getColumnFamily(\"ColumnFamilyName\").getRow(\"row-id\").getColumnCount();\r\n\tkeyspace.getColumnFamily(\"ColumnFamilyName\").getRow(\"row-id\").getColumnNames();\r\n\t\r\n\tkeyspace.getSuperColumnFamily(\"SuperColumnFamilyName\").getRowKeys();\r\n\tkeyspace.getSuperColumnFamily(\"SuperColumnFamilyName\").getRow(\"row-id\").getSuperColumnCount();\r\n\tkeyspace.getSuperColumnFamily(\"SuperColumnFamilyName\").getRow(\"row-id\").getSuperColumnKeys();\r\n\tkeyspace.getSuperColumnFamily(\"SuperColumnFamilyName\").getRow(\"row-id\").getSuperColumn(\"super-column-id\").getColumnCount();\r\n\tkeyspace.getSuperColumnFamily(\"SuperColumnFamilyName\").getRow(\"row-id\").getSuperColumn(\"super-column-id\").getColumnNames();\r\n\t```\r\n\t\r\n1. List a range of columns\r\n\r\n\t```java\r\n\tkeyspace.getColumnFamily(\"ColumnFamilyName\").getRow(\"row-id\").getColumnNames(\"start\", \"end\");\r\n\t\r\n\tkeyspace.getSuperColumnFamily(\"SuperColumnFamilyName\").getRow(\"row-id\").getSuperColumnKeys(\"start\", \"end\");\r\n\tkeyspace.getSuperColumnFamily(\"SuperColumnFamilyName\").getRow(\"row-id\").getSuperColumn(\"super-column-id\").getColumnNames(\"start\", \"end\");\r\n\t```\r\n\t\r\n\tQuering a range of rows won't be implemented because, depending on the partitioner, the range makes no sense and won't work as expected.\r\n\r\n1. Delete data\r\n\r\n\t```java\r\n\tkeyspace.getColumnFamily(\"ColumnFamilyName\").getRow(\"row-id\").deleteColumn(\"column-name\");\r\n\t\t\r\n\tkeyspace.getSuperColumnFamily(\"SuperColumnFamilyName\").getRow(\"row-id\").getSuperColumn(\"super-column-id\").deleteColumn(\"column-name\");\r\n\t```\r\n\r\n\r\n## Dependencies\r\n\r\nTo download dependencies\r\n\r\n\tant deps\r\n\r\n\r\n## TODO\r\n\r\n- Tests\r\n- Delete rows / super-columns\r\n- Indexes\r\n \r\n","tagline":"A dummy interface for cassandra.","google":"UA-1073051-15","note":"Don't delete this file! It's used internally to help with page regeneration."}